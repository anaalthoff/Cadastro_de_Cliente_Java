package visao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

/**
 *
 * @author aninh
 */
public class FrmCadastroCliente extends javax.swing.JFrame {

    //Driver de conexão com o banco de dados
    static final String jdbcDriver = "com.mysql.cj.jdbc.Driver";

    //URL de Conexão com o banco de dados
    static final String jdbcURL = "jdbc:mysql://localhost:3306/cliente?useSSL  = false & useTimezone = true & serverTimezone = UTC";

    //Usuário do banco de dados
    static final String jdbcUsuario = "anaalthoff";

    //Senha do usuário do banco de dados
    static final String jdbcSenha = "52@//I81h";

    /**
     * Creates new form FrmCadastroCliente
     */
    public FrmCadastroCliente() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTClienteId = new javax.swing.JTextField();
        jTNome = new javax.swing.JTextField();
        jTCPF = new javax.swing.JTextField();
        jBSalvar = new javax.swing.JButton();
        jBListar = new javax.swing.JButton();
        jBAlterar = new javax.swing.JButton();
        jBExcluir = new javax.swing.JButton();
        jBConsultar = new javax.swing.JButton();
        jBLimpar = new javax.swing.JButton();
        jBFechar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastro de Cliente");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Cadastro de Cliente");

        jLabel2.setText("ClienteId");

        jLabel3.setText("Nome");

        jLabel4.setText("CPF");

        jTClienteId.setEditable(false);
        jTClienteId.setName("jTClienteId"); // NOI18N
        jTClienteId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTClienteIdActionPerformed(evt);
            }
        });

        jTNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTNomeActionPerformed(evt);
            }
        });

        jTCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTCPFActionPerformed(evt);
            }
        });

        jBSalvar.setText("Salvar");
        jBSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarActionPerformed(evt);
            }
        });

        jBListar.setText("Listar");
        jBListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBListarActionPerformed(evt);
            }
        });

        jBAlterar.setText("Alterar");
        jBAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAlterarActionPerformed(evt);
            }
        });

        jBExcluir.setText("Excluir");
        jBExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExcluirActionPerformed(evt);
            }
        });

        jBConsultar.setText("Consultar");
        jBConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConsultarActionPerformed(evt);
            }
        });

        jBLimpar.setText("Limpar");
        jBLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimparActionPerformed(evt);
            }
        });

        jBFechar.setText("Fechar");
        jBFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBFecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jTClienteId, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTNome, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3)
                                .addComponent(jTCPF)))
                        .addGap(104, 104, 104)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBConsultar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBFechar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBListar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBAlterar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBListar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBConsultar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBLimpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBFechar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTClienteId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTClienteIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTClienteIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTClienteIdActionPerformed

    private void jTNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTNomeActionPerformed

    private void jTCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTCPFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTCPFActionPerformed

    private void jBSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarActionPerformed
        //Se é um cliente novo o id está em branco
        if (jTClienteId.getText().equals("")) {

            //Inclusão de um novo cliente pois o ID está em branco
            Connection con = null;

            PreparedStatement pstmt = null;
            try {
                //Registra a classe do driver
                Class.forName(jdbcDriver);
                //Abre a conexão
                con = DriverManager.getConnection(jdbcURL, jdbcUsuario, jdbcSenha);
                //SQL de inserção
                pstmt = con.prepareStatement("insert into cliente (NOME, CPF)  values  (?,?)");
                pstmt.setString(1, jTNome.getText());
                pstmt.setString(2, jTCPF.getText());
                int resultado = pstmt.executeUpdate();
                if (resultado != 0) {
                    JOptionPane.showMessageDialog(null, "Cliente inserido com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(null, "Cliente não foi inserido!");
                }
                // Limpar os campos
                jBLimparActionPerformed(evt);
                pstmt.close();
                con.close();
            } catch (ClassNotFoundException e) {
                System.out.println("Falha no Driver = " + e);
            } catch (SQLException e) {
                System.out.println("Falha no Sql = " + e);
            }
        } else {
            //Atualização de cliente pois o Id está preenchido
            Connection con = null;
            PreparedStatement pstmt = null;
            try {
                //Registra a classe do driver
                Class.forName(jdbcDriver);
                //Abre a conexão
                con = DriverManager.getConnection(jdbcURL, jdbcUsuario, jdbcSenha);
                //SQL de atualização
                pstmt = con.prepareStatement("update cliente set NOME = ?, CPF = ? where CLIENTEID = ?");
                pstmt.setString(1, jTNome.getText());
                pstmt.setString(2, jTCPF.getText());
                pstmt.setString(3, jTClienteId.getText());
                int resultado = pstmt.executeUpdate();
                if (resultado != 0) {
                    JOptionPane.showMessageDialog(null, "Cliente atualizado com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(null, "Cliente não foi atualizado!");
                }
                pstmt.close();
                con.close();
            } catch (ClassNotFoundException e) {
                System.out.println("Falha no Driver = " + e);
            } catch (SQLException e) {
                System.out.println("Falha no Sql = " + e);
            }
        }
    }//GEN-LAST:event_jBSalvarActionPerformed

    private void jBFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBFecharActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jBFecharActionPerformed

    private void jBLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimparActionPerformed
        // TODO add your handling code here:
        jTClienteId.setText("");
        jTNome.setText("");
        jTCPF.setText("");
    }//GEN-LAST:event_jBLimparActionPerformed

    private void jBListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBListarActionPerformed
        Connection con = null;
        Statement stmt = null;
        ResultSet rs = null;

        try {
            //Registra a classe do driver
            Class.forName(jdbcDriver);

            con = DriverManager.getConnection(jdbcURL, jdbcUsuario, jdbcSenha);
            stmt = con.createStatement();
            //SQL de Consulta
            rs = stmt.executeQuery("SELECT * FROM cliente ");

            //Cria um textArea para exibir os dados
            JTextArea textArea = new JTextArea(10, 30);
            //Deixa o textarea editavel
            textArea.setEditable(false);
            //Coloca um painel de rolagem ao textArea
            JScrollPane painelRolagem = new JScrollPane(textArea);
            String linha = "";

            //Percorro a lista de clientes enquanto existir cliente
            while (rs.next()) {
                linha = linha + rs.getString(1) + " - " + rs.getString(2) + " - " + rs.getString(3) + "\n";
            }
            //Coloco a string no textArea
            textArea.setText(linha);
            //Mostro o textArea com o JOptionPane
            JOptionPane.showMessageDialog(null, painelRolagem, "Listagem de Clientes", JOptionPane.WARNING_MESSAGE);

            rs.close();
            stmt.close();
            con.close();

        } catch (ClassNotFoundException e) {
            System.out.println("Falha no Driver = " + e);
        } catch (SQLException e) {
            System.out.println("Falha no Sql = " + e);
        }
    }//GEN-LAST:event_jBListarActionPerformed

    private void jBAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAlterarActionPerformed
        //Pergunto ao usuário qual o id a ser alterado
        int clienteIdAlterar = Integer.parseInt(JOptionPane.showInputDialog("Digite o Id do cliente a ser alterado"));

        Connection con = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;

        try {
            //Registra a classe do driver
            Class.forName(jdbcDriver);
            //Abre a conexão
            con = DriverManager.getConnection(jdbcURL, jdbcUsuario, jdbcSenha);
            //SQL de consulta
            pstmt = con.prepareStatement("select * from cliente where clienteId = ?");
            pstmt.setInt(1, clienteIdAlterar);
            rs = pstmt.executeQuery();
            //Verifica se existe algum registro no resultset
            if (rs.next()) {
                //Exibe os dados na janela
                jTClienteId.setText(rs.getString("clienteId") + "");
                jTNome.setText(rs.getString("nome"));
                jTCPF.setText(rs.getString("cpf"));
                JOptionPane.showMessageDialog(null, "Cliente encontrado!");
            } else {
                JOptionPane.showMessageDialog(null, "Cliente não encontrado!");
            }
            pstmt.close();
            con.close();
        } catch (ClassNotFoundException e) {
            System.out.println("Falha no Driver = " + e);
        } catch (SQLException e) {
            System.out.println("Falha no Sql = " + e);
        }
    }//GEN-LAST:event_jBAlterarActionPerformed

    private void jBExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExcluirActionPerformed
        //Pergunto ao usuário qual o id a ser excluído
        int clienteIdExcluir = Integer.parseInt(JOptionPane.showInputDialog("Digite o Id do cliente a ser excluído"));

        //Atualização de cliente pois o Id está preenchido
        Connection con = null;
        PreparedStatement pstmt = null;

        try {
            //Registra a classe do driver
            Class.forName(jdbcDriver);
            //Abre a conexão
            con = DriverManager.getConnection(jdbcURL, jdbcUsuario, jdbcSenha);
            pstmt = con.prepareStatement("delete from cliente where clienteId = ?");
            pstmt.setInt(1, clienteIdExcluir);
            int resultado = pstmt.executeUpdate();
            if (resultado != 0) {
                JOptionPane.showMessageDialog(null, "Cliente excluído com sucesso!");
            } else {
                JOptionPane.showMessageDialog(null, "Cliente não excluído!");
            }
            pstmt.close();
            con.close();
        } catch (ClassNotFoundException e) {
            System.out.println("Falha no Driver = " + e);
        } catch (SQLException e) {
            System.out.println("Falha no Sql = " + e);
        }
    }//GEN-LAST:event_jBExcluirActionPerformed

    private void jBConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConsultarActionPerformed
        //Pergunto ao usuário qual o id a ser alterado
        int clienteIdConsultar = Integer.parseInt(JOptionPane.showInputDialog("Digite o Id do cliente a ser consultado"));

        Connection con = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;

        try {
            //Registra a classe do driver
            Class.forName(jdbcDriver);
            //Abre a conexão
            con = DriverManager.getConnection(jdbcURL, jdbcUsuario, jdbcSenha);
            //SQL de consulta
            pstmt = con.prepareStatement("select * from cliente where clienteId = ?");
            pstmt.setInt(1, clienteIdConsultar);
            rs = pstmt.executeQuery();
            //Verifica se existe algum registro no resultset
            if (rs.next()) {
                //Exibe os dados na janela
                jTClienteId.setText(rs.getString("clienteId") + "");
                jTNome.setText(rs.getString("nome"));
                jTCPF.setText(rs.getString("cpf"));
                JOptionPane.showMessageDialog(null, "Cliente encontrado!");
            } else {
                JOptionPane.showMessageDialog(null, "Cliente não encontrado!");
            }
            pstmt.close();
            con.close();
        } catch (ClassNotFoundException e) {
            System.out.println("Falha no Driver = " + e);
        } catch (SQLException e) {
            System.out.println("Falha no Sql = " + e);
        }
    }//GEN-LAST:event_jBConsultarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCadastroCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAlterar;
    private javax.swing.JButton jBConsultar;
    private javax.swing.JButton jBExcluir;
    private javax.swing.JButton jBFechar;
    private javax.swing.JButton jBLimpar;
    private javax.swing.JButton jBListar;
    private javax.swing.JButton jBSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTCPF;
    private javax.swing.JTextField jTClienteId;
    private javax.swing.JTextField jTNome;
    // End of variables declaration//GEN-END:variables
}
